#pragma config(Sensor, S3,     sound,          sensorSoundDBA)
#pragma config(Sensor, S4,     color,          sensorColorNxtFULL)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*
task main()
{
	int count = 0;
	wait1Msec(1000);
	time1[T1] = 0;
	while(time1[T1] <= 1000){
		if(SensorValue(sound) >= 0) count ++;
		wait1Msec(3);
	}
	
	eraseDisplay();
	nxtDisplayTextLine(1,"sound %d / sec",count);
	wait1Msec(5000);
}
*/
/*
task main(){
	
while(1){
	
	if(SensorValue(sound) >= 70){
		motor[motorA] = 30;
		motor[motorC] = 30;
		
		if(SensorValue(touch) == 1){
				motor[motorA] = 0;
				motor[motorC] = 0;
				break;
			}
}	
	else{
		motor[motorA] = 0;
		motor[motorC] = 0;}
}}
*/

task main(){
	int count = 0;
	SensorValue(sound) =0;
	while(1){
		nxtDisplayTextLine(1,"%d", count%5);
		nxtDisplayBigTextLine(2,"%d", SensorValue(sound));;
			if(SensorValue(sound)>50){
				while(SensorValue(sound) > 50){};
				count++;
			
			}
		if(SensorValue(color) == 5){
			motor[motorA] = 50;
			motor[motorC] = 50;
			wait1Msec(500);
			
			motor[motorA] = 100;
			motor[motorc] = -100;
			wait1Msec(1000);
		}
		
		else if(SensorValue(color) == BLUECOLOR){
			motor[motorA] = 20;
			motor[motorC] = 0;
			wait1Msec(100);
			
		}
		switch(count%5){
			
			case 1:
			motor[motorA] = 30;
			motor[motorC] = 30;
			break;
			
			case 2:
			motor[motorA] = 30;
			motor[motorC] = 10;
			break;
			
			case 3:
  		motor[motorA] = 10;
  		motor[motorC] = 30;
  		break;
  		
  		case 4:
  		motor[motorA] = -5;
  		motor[motorC] = -5;
  		break;
  		
  		default:
  		motor[motorA] = 0;
  		motor[motorC] = 0;
  		break;
		}
}	}	