#pragma config(Sensor, S1,     touch_100,      sensorTouch)
#pragma config(Sensor, S4,     touch_500,      sensorTouch)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#define distance_100 10
#define distance_500 15
#define DIAMETER 55


float convert(float distance){

	float angle;
	angle = (55/2/DIAMETER*360);
	return angle;
}


task main()
{


	int count = 0;
	int count_10000;
	int count_5000;
	int count_1000;
	int total_coin_100 =0;
	int total_coin_500 =0;
	int rotation;

	wait1Msec(100);
	
	while(1){
			
	if(bQueuedMsgAvailable()){
		
			count = messageParm[0];
			
			nxtDisplayTextLine(2, "count = %d ", count);
			nxtDisplayTextLine(3, "total_coin_100 = %d",total_coin_100);
			nxtDisplayTextLine(4, "total_coin_500 = %d",total_coin_500);
			
			
			
		if(count ==1){
				nxtDisplayTextLine(5,"1000");
			count_10000++;
			
		}
		
		else if(count ==2){
				nxtDisplayTextLine(5,"5000");
			count_5000++;
		
			
		}
		
		else if(count ==3){
			nxtDisplayTextLine(5,"10000");
			count_1000++;
			
		}
		
		total_coin_100 = count_10000 * 100 + count_5000 * 50 + count_1000 * 10;
		total_coin_500 = count_10000 * 20 + count_5000 * 10 + count_1000 * 2;
		
	
		if(count == 0){	
			
				if(SensorValue(touch_100) == 1){
					
				rotation  = (int) convert((float)distance_100 * total_coin_100);
				nMotorEncoderTarget[motorA] = rotation;
				nMotorEncoderTarget[motorC] = rotation;
				motor[motorA] = 30;
				motor[motorC] = 30;
			
				while(nMotorEncoder[motorA] < rotation);
				total_coin_100 = 0;
				total_coin_500 = 0;
				
			}
			
			
			else if(SensorValue(touch_500) == 1){
				
				rotation  = (int) convert((float)distance_500 * total_coin_500);
				nMotorEncoderTarget[motorA] = rotation;
				nMotorEncoderTarget[motorC] = rotation;
				motor[motorA] = 30;
				motor[motorC] = 30;
			
				while(nMotorEncoder[motorA] < rotation);
				total_coin_100 = 0;
				total_coin_500 = 0;
		
		
	}
	
}
			wait1Msec(150);
			ClearMessage(); 
		}
	}
}